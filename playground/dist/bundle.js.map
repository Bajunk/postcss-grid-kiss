{"version":3,"sources":["webpack:////source/vendor.es6"],"names":[],"mappings":"+CAQa,mBAET,4BAYc,4CAAV,UAAiB,EACb,OAIH,IA3BT,iBA4BK,MAED,iBAtBS,aAgCQ,EAET,CACA,QAAmB,EACtB,GAHD,EAGO,EACH,MAAO,EAEd,aAvCQ,4BA2CE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAXX","file":"bundle.js","sourcesContent":["/**\n * Contains helpers for working with vendor prefixes.\n *\n * @example\n * const vendor = postcss.vendor;\n *\n * @namespace vendor\n */\nlet vendor = {\n\n    /**\n     * Returns the vendor prefix extracted from an input string.\n     *\n     * @param {string} prop - string with or without vendor prefix\n     *\n     * @return {string} vendor prefix or empty string\n     *\n     * @example\n     * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\n     * postcss.vendor.prefix('tab-size')      //=> ''\n     */\n    prefix(prop) {\n        if ( prop[0] === '-' ) {\n            let sep = prop.indexOf('-', 1);\n            return prop.substr(0, sep + 1);\n        } else {\n            return '';\n        }\n    },\n\n    /**\n     * Returns the input string stripped of its vendor prefix.\n     *\n     * @param {string} prop - string with or without vendor prefix\n     *\n     * @return {string} string name without vendor prefixes\n     *\n     * @example\n     * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n     */\n    unprefixed(prop) {\n        if ( prop[0] === '-' ) {\n            let sep = prop.indexOf('-', 1);\n            return prop.substr(sep + 1);\n        } else {\n            return prop;\n        }\n    }\n\n};\n\nexport default vendor;\n\n\n\n// WEBPACK FOOTER //\n// /source/vendor.es6"],"sourceRoot":""}